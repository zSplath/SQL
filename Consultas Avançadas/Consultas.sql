SELECT COUNT(*) FROM TABELA_DE_CLIENTES
SELECT COUNT(*) FROM TABELA_DE_VENDEDORES
SELECT COUNT(*) FROM TABELA_DE_PRODUTOS;
SELECT COUNT(*) FROM NOTAS_FISCAIS;
SELECT COUNT(*) FROM ITENS_NOTAS_FISCAIS;

SELECT tb.* FROM TABELA_DE_CLIENTES tb

SELECT * FROM TABELA_DE_PRODUTOS WHERE 
SABOR NOT IN ('Laranja', 'Melancia') AND TAMANHO = '1,5 Litros';

SELECT * FROM TABELA_DE_CLIENTES WHERE 
CIDADE IN ('Rio de Janeiro', 'Sao Paulo') AND (IDADE BETWEEN 18 AND 30);

SELECT * FROM TABELA_DE_PRODUTOS WHERE SABOR LIKE '%LIMAO%';

SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS TB WHERE SABOR LIKE '%LIMAO%';

SELECT DISTINCT EMBALAGEM FROM TABELA_DE_PRODUTOS TB WHERE SABOR LIKE '%LIMAO%';

SELECT TOP 5 * FROM TABELA_DE_CLIENTES ORDER BY ESTADO, BAIRRO;

SELECT CIDADE, COUNT(*) [Total de Clientes], AVG(IDADE) [Idade Média], SUM(LIMITE_DE_CREDITO) [Soma de Limite de Crédito] FROM TABELA_DE_CLIENTES GROUP BY CIDADE;

SELECT MAX(CODIGO_DO_PRODUTO) CODIGO_DO_PRODUTO, SABOR FROM TABELA_DE_PRODUTOS WHERE SABOR LIKE '%LIMAO%' group by SABOR;

SELECT CIDADE, AVG(IDADE) [Idade Média] FROM TABELA_DE_CLIENTES GROUP BY CIDADE HAVING AVG(IDADE) > 21;

SELECT EMBALAGEM, MIN(PRECO_DE_LISTA) [Menor Preço] FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM HAVING MIN(PRECO_DE_LISTA) < 5;

SELECT NOME_DO_PRODUTO, PRECO_DE_LISTA,
(
	CASE 
		WHEN PRECO_DE_LISTA >= 11 THEN 'CARO'
		WHEN PRECO_DE_LISTA >= 6  THEN 'NORMAL'
		ELSE 'BARATO'
	END
) AS VALOR
FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA

SELECT COUNT(*) [Quantidade de Produtos],
(
	CASE 
		WHEN PRECO_DE_LISTA >= 11 THEN 'CARO'
		WHEN PRECO_DE_LISTA >= 6  THEN 'NORMAL'
		ELSE 'BARATO'
	END
) AS VALOR
FROM TABELA_DE_PRODUTOS
GROUP BY (
	CASE 
		WHEN PRECO_DE_LISTA >= 11 THEN 'CARO'
		WHEN PRECO_DE_LISTA >= 6  THEN 'NORMAL'
		ELSE 'BARATO'
	END
)

SELECT NOME, COUNT(*) [Total de Vendas] FROM TABELA_DE_VENDEDORES TV JOIN NOTAS_FISCAIS NF ON NF.MATRICULA = TV.MATRICULA GROUP BY NOME

SELECT DISTINCT TC.CPF, TC.NOME FROM TABELA_DE_CLIENTES TC JOIN NOTAS_FISCAIS NF ON TC.CPF = NF.CPF

INSERT TABELA_DE_CLIENTES VALUES ('23412632331', 'Juliana Silva', 'Rua Tramandaí', ' ', 'Bangu', 'Rio de Janeiro', 'RJ', '23400000', '1989-02-04', 33, 'F', '180000', '24500', 0);

SELECT DISTINCT TC.CPF, TC.NOME FROM TABELA_DE_CLIENTES TC LEFT JOIN NOTAS_FISCAIS NF ON TC.CPF = NF.CPF WHERE NF.CPF IS NULL

SELECT TC.NOME[Nome do Cliente], TV.BAIRRO [Bairro do Vendedor], TV.NOME [Nome do Vendedor] 
FROM TABELA_DE_CLIENTES TC JOIN TABELA_DE_VENDEDORES TV ON TC.BAIRRO = TV.BAIRRO ORDER BY TV.BAIRRO

SELECT TV.NOME [Nome do Vendedor], TV.BAIRRO [Bairro do Vendedor]
FROM TABELA_DE_CLIENTES TC RIGHT JOIN TABELA_DE_VENDEDORES TV ON TC.BAIRRO = TV.BAIRRO WHERE TC.BAIRRO IS NULL

SELECT TC.NOME [Nome do Cliente], TC.BAIRRO [Bairro do Cliente]
FROM TABELA_DE_CLIENTES TC LEFT JOIN TABELA_DE_VENDEDORES TV ON TC.BAIRRO = TV.BAIRRO WHERE TV.BAIRRO IS NULL ORDER BY [Nome do Cliente]

SELECT TC.NOME[Nome do Cliente], TC.BAIRRO [Bairro do Cliente], TV.BAIRRO [Bairro do Vendedor], TV.NOME [Nome do Vendedor] 
FROM TABELA_DE_CLIENTES TC FULL JOIN TABELA_DE_VENDEDORES TV ON TC.BAIRRO = TV.BAIRRO ORDER BY TC.BAIRRO

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES

SELECT DISTINCT BAIRRO, 'CLIENTE' AS TABELA FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO, 'VENDEDOR' FROM TABELA_DE_VENDEDORES

SELECT NOME FROM TABELA_DE_CLIENTES WHERE BAIRRO IN (
	SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES
)

SELECT DISTINCT SABOR FROM TABELA_DE_PRODUTOS WHERE CODIGO_DO_PRODUTO IN (
	SELECT TP.CODIGO_DO_PRODUTO
		FROM ITENS_NOTAS_FISCAIS  INF INNER JOIN TABELA_DE_PRODUTOS TP 
		ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
		GROUP BY TP.CODIGO_DO_PRODUTO
		HAVING SUM(INF.QUANTIDADE) > 394000 
)

SELECT Q.CODIGO_DO_PRODUTO, Q.NOME_DO_PRODUTO, Q.QUANTIDADE FROM (
	SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(INF.QUANTIDADE) AS QUANTIDADE 
	FROM ITENS_NOTAS_FISCAIS  INF JOIN TABELA_DE_PRODUTOS TP 
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	GROUP BY INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO 
) Q
WHERE Q.QUANTIDADE > 394000
ORDER BY Q.QUANTIDADE DESC;

SELECT M.EMBALAGEM, M.[Menor Preço] FROM (
	SELECT EMBALAGEM, MIN(PRECO_DE_LISTA) [Menor Preço] 
	FROM TABELA_DE_PRODUTOS 
	GROUP BY EMBALAGEM
) M
WHERE M.[Menor Preço] < 5

CREATE VIEW MENOR_PRECO_EMBALAGEM AS SELECT EMBALAGEM, MIN(PRECO_DE_LISTA) [Menor Preço] FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM

SELECT * FROM MENOR_PRECO_EMBALAGEM WHERE [Menor Preço] < 5

SELECT 
UPPER(SUBSTRING(TRIM(NOME), 1,CHARINDEX(' ', TRIM(NOME), 1))) [Nome Maiúsculo],
REVERSE(SUBSTRING(REVERSE(TRIM(NOME)), 1, CHARINDEX(' ', REVERSE(TRIM(NOME)), 1))) [Último Sobrenome],
CONCAT(ENDERECO_1 + ', ', BAIRRO + ', ', CIDADE + ', ', ESTADO) [Endereço Completo] 
FROM TABELA_DE_CLIENTES

SELECT REPLACE(REPLACE(TAMANHO, 'Litros', 'L'), 'Litro', 'L') Volume FROM TABELA_DE_PRODUTOS ORDER BY Volume

SELECT 
DATEADD(DAY, -30, GETDATE()) [30 Dias Atrás], 
DATEDIFF(MONTH, DATETIMEFROMPARTS(YEAR(GETDATE()), 1,1,0,0,0,0), GETDATE()) [Meses completos desde o início do ano], 
DAY(GETDATE()) [Dia de Hoje]

SET LANGUAGE Portuguese;
SELECT 
SUBSTRING(TRIM(NOME), 1,CHARINDEX(' ', TRIM(NOME), 1)) + 
REVERSE(SUBSTRING(REVERSE(TRIM(NOME)), 1, CHARINDEX(' ', REVERSE(TRIM(NOME)), 1)-1))
+ ' nasceu em ' + 
DATENAME(WEEKDAY,DATA_DE_NASCIMENTO) + ', ' +
DATENAME(DAY,DATA_DE_NASCIMENTO)	 + ' de ' +
DATENAME(MONTH, DATA_DE_NASCIMENTO)  + ' de ' +
DATENAME(YEAR, DATA_DE_NASCIMENTO) Nascimento
FROM TABELA_DE_CLIENTES;
SET LANGUAGE English;

SELECT ROUND(PI(), 2), CEILING(PI()), FLOOR(PI()), POWER(PI(), 2), EXP(2), SQRT(121), SIGN(-EXP(1)), ABS(-3.14)

SELECT CONVERT(VARCHAR(25), DATA_DE_NASCIMENTO, 103) DataBrasileira, CAST(DATA_DE_NASCIMENTO AS VARCHAR(10)) DataRegistrada FROM TABELA_DE_CLIENTES

SELECT 
	NF.CPF, 
	TC.NOME,
	CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) AS MES_ANO, 
	CASE 
		WHEN SUM(INF.QUANTIDADE) > VOLUME_DE_COMPRA THEN 'INVÁLIDO'
		ELSE 'VÁLIDO' 
	END 
	CLASSIFICAÇÃO,
	SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL,
	TC.VOLUME_DE_COMPRA
FROM NOTAS_FISCAIS NF JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO JOIN TABELA_DE_CLIENTES TC ON TC.CPF = NF.CPF
WHERE CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) = '2018-01'
GROUP BY NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120), TC.VOLUME_DE_COMPRA, TC.NOME


SELECT *, ROUND((1 - (C.VOLUME_DE_COMPRA/C.QUANTIDADE_TOTAL)) * 100, 2) AS PERCENTUAL
FROM (
	SELECT 
		NF.CPF, 
		TC.NOME,
		CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) AS MES_ANO, 
		CASE 
			WHEN SUM(INF.QUANTIDADE) > VOLUME_DE_COMPRA THEN 'INVÁLIDO'
			ELSE 'VÁLIDO' 
		END 
		CLASSIFICAÇÃO,
		SUM(INF.QUANTIDADE) AS QUANTIDADE_TOTAL,
		TC.VOLUME_DE_COMPRA
	FROM NOTAS_FISCAIS NF JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO JOIN TABELA_DE_CLIENTES TC ON TC.CPF = NF.CPF
	WHERE CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) = '2015-01'
	GROUP BY NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120), TC.VOLUME_DE_COMPRA, TC.NOME
) C 
WHERE C.CLASSIFICAÇÃO <> 'VÁLIDO'


SELECT V.*, ROUND(VENDAS*100/CAST(TOTAL AS FLOAT), 2) [%]
FROM (
	SELECT TB.SABOR, SUM(INF.QUANTIDADE) AS VENDAS, CAST(NF.DATA_VENDA AS CHAR(4)) AS ANO
	FROM TABELA_DE_PRODUTOS TB JOIN ITENS_NOTAS_FISCAIS INF ON TB.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO JOIN NOTAS_FISCAIS NF ON INF.NUMERO = NF.NUMERO
	WHERE CAST(NF.DATA_VENDA AS CHAR(4)) = 2015
	GROUP BY TB.SABOR, CAST(NF.DATA_VENDA AS CHAR(4))
) V
JOIN (
	SELECT YEAR(NF.DATA_VENDA) ANO, SUM(INF.QUANTIDADE) TOTAL 
	FROM NOTAS_FISCAIS NF JOIN ITENS_NOTAS_FISCAIS INF ON NF.NUMERO = INF.NUMERO 
	WHERE YEAR(NF.DATA_VENDA) = 2015 
	GROUP BY YEAR(NF.DATA_VENDA)
) T
ON V.ANO = T.ANO
ORDER BY VENDAS DESC